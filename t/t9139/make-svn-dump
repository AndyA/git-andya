#!/bin/sh
#
# this script sets up a Subversion repository for Makefile in the
# first ever git merge, as if it were done with svn 1.5+
#

# where the script targets its commits
target=${1-trunk}

set -e

mkdir foo.svn
svnadmin create foo.svn
svn co file://`pwd`/foo.svn foo

cd foo
mkdir trunk
mkdir branches
svn add trunk branches
svn commit -m "Setup trunk and branches"
cd trunk

git-cat-file blob 6683463e:Makefile > Makefile
svn add Makefile 

echo "Committing ANCESTOR"
svn commit -m "ancestor"
echo "Oh that worked did it SVN?  Where is the change 'ancestor'?"
svn log
cd ..
svn cp trunk branches/left

echo "Committing BRANCH POINT"
svn commit -m "make left branch"
cd branches/left/

git-cat-file blob 5873b67e:Makefile > Makefile
echo "Committing BRANCH UPDATE 1"
svn commit -m "left update 1"
cd ../..

cd trunk
git-cat-file blob 75118b13:Makefile > Makefile
echo "Committing TRUNK UPDATE"
svn commit -m "trunk update"
svn log
echo "Oh that worked did it SVN?  Where is the change 'trunk update'?"

cd ../branches/left
git-cat-file blob ff5ebe39:Makefile > Makefile
echo "Committing BRANCH UPDATE 2"
svn commit -m "left update 2"

git-cat-file blob b5039db6:Makefile > Makefile
echo "Committing BRANCH UPDATE 3"
svn commit -m "left update 3"

if [ "$target" = "trunk" ]
then

    cd ../../trunk
    set -x
    svn merge --accept postpone ../branches/left

    git-cat-file blob b51ad431:Makefile > Makefile

    svn resolved Makefile
    svn update # ?!?!

    set +x
    echo "Committing MERGE"
    svn commit -m "merge branch 'left' into 'trunk'"

    cd ../..

else

    # merge to the branch
    set -x
    svn merge --accept postpone ../../trunk
    echo rc=$?
    git-cat-file blob b51ad431:Makefile > Makefile

    svn resolved Makefile
    echo rc=$?
    svn update # ?!?!
    echo rc=$?

    set +x
    echo "Committing MERGE"
    svn commit -m "merge 'trunk' into 'left'"
    echo rc=$?

    cd ../../..

fi

svnadmin dump foo.svn > svn-merge.dump

#rm -rf foo foo.svn

